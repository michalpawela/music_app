{
  "swagger": "2.0",
  "info": {
    "title": "Your API",
    "version": "1.0.0"
  },
  "paths": {
    "/albums": {
      "post": {
        "tags": [
          "albums"
        ],
        "summary": "Create a new album.",
        "description": "Create a new album in the database.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON data for creating a new album",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlbumData"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Album created successfully.",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      },
      "get": {
        "tags": [
          "albums"
        ],
        "summary": "Get all albums.",
        "description": "Retrieve details of all albums in the database.",
        "responses": {
          "200": {
            "description": "List of albums.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Album"
              }
            }
          }
        }
      }
    },
    "/albums/{album_id}": {
      "put": {
        "tags": [
          "albums"
        ],
        "summary": "Update an existing album by ID.",
        "description": "Update an existing album in the database by providing an AlbumID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "album_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "AlbumID of the desired album."
          },
          {
            "name": "body",
            "in": "body",
            "description": "JSON data for updating an existing album",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlbumData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Album updated successfully.",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          },
          "404": {
            "description": "Album not found."
          }
        }
      },
      "get": {
        "tags": [
          "albums"
        ],
        "summary": "Get album by ID.",
        "description": "Retrieve album details by providing an AlbumID.",
        "parameters": [
          {
            "name": "album_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "AlbumID of the desired album."
          }
        ],
        "responses": {
          "200": {
            "description": "Album data.",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          },
          "404": {
            "description": "Album not found."
          }
        }
      },
      "delete": {
        "tags": [
          "albums"
        ],
        "summary": "Delete album by ID.",
        "description": "Delete album by providing an AlbumID.",
        "parameters": [
          {
            "name": "album_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "AlbumID of the undesired album."
          }
        ],
        "responses": {
          "200": {
            "description": "Album deleted successfully."
          },
          "404": {
            "description": "Album not found."
          }
        }
      }
    },
    "/genres": {
      "post": {
        "tags": [
          "genres"
        ],
        "summary": "Create a new genre.",
        "description": "Create a new genre in the database.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON data for creating a new genre",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenreData"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Genre created successfully.",
            "schema": {
              "$ref": "#/definitions/Genre"
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      },
      "get": {
        "tags": [
          "genres"
        ],
        "summary": "Get all genres.",
        "description": "Retrieve details of all genres in the database.",
        "responses": {
          "200": {
            "description": "List of genres.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Genre"
              }
            }
          }
        }
      }
    },
    "/genres/{genre_id}": {
      "put": {
        "tags": [
          "genres"
        ],
        "summary": "Update an existing genre by ID.",
        "description": "Update an existing genre in the database by providing a GenreID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "genre_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "GenreID of the desired genre."
          },
          {
            "name": "body",
            "in": "body",
            "description": "JSON data for updating an existing genre",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenreData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Genre updated successfully.",
            "schema": {
              "$ref": "#/definitions/Genre"
            }
          },
          "404": {
            "description": "Genre not found."
          }
        }
      },
      "get": {
        "tags": [
          "genres"
        ],
        "summary": "Get genre by ID.",
        "description": "Retrieve genre details by providing a GenreID.",
        "parameters": [
          {
            "name": "genre_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "GenreID of the desired genre."
          }
        ],
        "responses": {
          "200": {
            "description": "Genre data.",
            "schema": {
              "$ref": "#/definitions/Genre"
            }
          },
          "404": {
            "description": "Genre not found."
          }
        }
      },
      "delete": {
        "tags": [
          "genres"
        ],
        "summary": "Delete genre by ID.",
        "description": "Delete genre by providing an GenreID.",
        "parameters": [
          {
            "name": "genre_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "GenreID of the undesired genre."
          }
        ],
        "responses": {
          "200": {
            "description": "Genre data.",
            "schema": {
              "$ref": "#/definitions/Genre"
            }
          },
          "404": {
            "description": "Genre not found."
          }
        }
      }
    },
    "/artists": {
      "post": {
        "tags": [
          "artists"
        ],
        "summary": "Create a new artist.",
        "description": "Create a new artist in the database.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON data for creating a new artist",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtistData"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Artist created successfully.",
            "schema": {
              "$ref": "#/definitions/Artist"
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      },
      "get": {
        "tags": [
          "artists"
        ],
        "summary": "Get all artists.",
        "description": "Retrieve details of all artists in the database.",
        "responses": {
          "200": {
            "description": "List of artists.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Artist"
              }
            }
          }
        }
      }
    },
    "/artists/{artist_id}": {
      "put": {
        "tags": [
          "artists"
        ],
        "summary": "Update an existing artist by ID.",
        "description": "Update an existing artist in the database by providing an ArtistID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "artist_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "ArtistID of the desired artist."
          },
          {
            "name": "body",
            "in": "body",
            "description": "JSON data for updating an existing artist",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtistData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artist updated successfully.",
            "schema": {
              "$ref": "#/definitions/Artist"
            }
          },
          "404": {
            "description": "Artist not found."
          }
        }
      },
      "get": {
        "tags": [
          "artists"
        ],
        "summary": "Get artist by ID.",
        "description": "Retrieve artist details by providing an ArtistID.",
        "parameters": [
          {
            "name": "artist_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "ArtistID of the desired artist."
          }
        ],
        "responses": {
          "200": {
            "description": "Artist data.",
            "schema": {
              "$ref": "#/definitions/Artist"
            }
          },
          "404": {
            "description": "Artist not found."
          }
        }
      },
      "delete": {
        "tags": [
          "artists"
        ],
        "summary": "Delete artist by ID.",
        "description": "Delete artist by providing an ArtistID.",
        "parameters": [
          {
            "name": "artist_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "ArtistID of the undesired artist."
          }
        ],
        "responses": {
          "200": {
            "description": "Artist data.",
            "schema": {
              "$ref": "#/definitions/Artist"
            }
          },
          "404": {
            "description": "Artist not found."
          }
        }
      }
    },
    "/songs": {
      "post": {
        "summary": "Create a new song",
        "description": "Create a new song in the database and stores it on disk with backend.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "songs"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON data for creating a new song",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SongData"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful creation of a song",
            "schema": {
              "$ref": "#/definitions/Song"
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "File has not been provided"
                }
              }
            }
          },
          "404": {
            "description": "IntegrityError: Artist or Album not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "IntegrityError: Artist or Album not found"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all songs",
        "description": "Retrieve details of all songs in the database.",
        "tags": [
          "songs"
        ],
        "responses": {
          "200": {
            "description": "List of songs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Song"
              }
            }
          }
        }
      }
    },
    "/songs/{song_id}": {
      "get": {
        "tags": [
          "songs"
        ],
        "summary": "Get song by ID.",
        "description": "Retrieve song details by providing a SongID.",
        "parameters": [
          {
            "name": "song_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "SongID of the desired song."
          }
        ],
        "responses": {
          "200": {
            "description": "Song data.",
            "schema": {
              "$ref": "#/definitions/Song"
            }
          },
          "404": {
            "description": "Song not found."
          }
        }
      },
      "put": {
        "tags": [
          "songs"
        ],
        "summary": "Update an existing song by ID.",
        "description": "Update an existing song in the database by providing a SongID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "song_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "SongID of the desired song."
          },
          {
            "name": "body",
            "in": "body",
            "description": "JSON data for updating an existing song",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SongData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Song updated successfully.",
            "schema": {
              "$ref": "#/definitions/Song"
            }
          },
          "404": {
            "description": "Song not found."
          }
        }
      },
      "delete": {
        "tags": [
          "songs"
        ],
        "summary": "Delete song by ID.",
        "description": "Delete song by providing an SongID.",
        "parameters": [
          {
            "name": "song_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "SongID of the undesired song."
          }
        ],
        "responses": {
          "200": {
            "description": "Song data.",
            "schema": {
              "$ref": "#/definitions/Song"
            }
          },
          "404": {
            "description": "Song not found."
          }
        }
      }
    },
    "/songs/artist/{artist_id}": {
      "get": {
        "tags": [
          "songs"
        ],
        "summary": "Get songs by ArtistID.",
        "description": "Retrieve songs details by providing a ArtistID.",
        "parameters": [
          {
            "name": "artist_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "ArtistID of the desired song."
          }
        ],
        "responses": {
          "200": {
            "description": "Song data.",
            "schema": {
              "$ref": "#/definitions/SongsOfArtist"
            }
          },
          "404": {
            "description": "Song not found."
          }
        }
      }
    },
    "/songs/genre/{genre_id}": {
      "get": {
        "tags": [
          "songs"
        ],
        "summary": "Get songs by GenreID.",
        "description": "Retrieve songs details by providing a GenreID.",
        "parameters": [
          {
            "name": "genre_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "GenreID of the desired song."
          }
        ],
        "responses": {
          "200": {
            "description": "Song data.",
            "schema": {
              "$ref": "#/definitions/SongsOfGenre"
            }
          },
          "404": {
            "description": "Song not found."
          }
        }
      }
    },
    "/playlists": {
      "post": {
        "tags": [
          "playlists"
        ],
        "summary": "Create a new playlist.",
        "description": "Create a new playlist in the database.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON data for creating a new playlist",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlaylistData"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Playlist created successfully.",
            "schema": {
              "$ref": "#/definitions/Playlist"
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      },
      "get": {
        "tags": [
          "playlists"
        ],
        "summary": "Get all playlists.",
        "description": "Retrieve details of all playlists in the database.",
        "responses": {
          "200": {
            "description": "List of playlists.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Playlist"
              }
            }
          }
        }
      }
    },
    "/playlists/{playlist_id}": {
      "put": {
        "tags": [
          "playlists"
        ],
        "summary": "Update an existing playlist by ID.",
        "description": "Update an existing playlist in the database by providing a PlaylistID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "playlist_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "PlaylistID of the desired playlist."
          },
          {
            "name": "body",
            "in": "body",
            "description": "JSON data for updating an existing playlist",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlaylistData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Playlist updated successfully.",
            "schema": {
              "$ref": "#/definitions/Playlist"
            }
          },
          "404": {
            "description": "Playlist not found."
          }
        }
      },
      "get": {
        "tags": [
          "playlists"
        ],
        "summary": "Get playlist by ID.",
        "description": "Retrieve playlist details by providing a PlaylistID.",
        "parameters": [
          {
            "name": "playlist_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "PlaylistID of the desired playlist."
          }
        ],
        "responses": {
          "200": {
            "description": "Playlist data.",
            "schema": {
              "$ref": "#/definitions/Playlist"
            }
          },
          "404": {
            "description": "Playlist not found."
          }
        }
      },
      "delete": {
        "tags": [
          "playlists"
        ],
        "summary": "Delete playlist by ID.",
        "description": "Delete playlist by providing an PlaylistID.",
        "parameters": [
          {
            "name": "playlist_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "PlaylistID of the undesired playlist."
          }
        ],
        "responses": {
          "200": {
            "description": "Playlist data.",
            "schema": {
              "$ref": "#/definitions/Playlist"
            }
          },
          "404": {
            "description": "Playlist not found."
          }
        }
      }
    },
    "/playlists/add_song": {
      "post": {
        "tags": [
          "playlists"
        ],
        "summary": "Add Song to Playlist",
        "description": "Add a song to a playlist",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON data for creating a new playlist",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SongPlayListAssociation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "playlist": {
                  "$ref": "#/definitions/SongPlayListAssociation"
                }
              }
            }
          }
        }
      }
    },
    "/playlists/remove_song": {
      "delete": {
        "tags": [
          "playlists"
        ],
        "summary": "Remove Song from Playlist",
        "description": "Remove a song from a playlist",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON data for creating a new playlist",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SongPlayListAssociation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "playlist": {
                  "$ref": "#/definitions/SongPlayListAssociation"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
        "post": {
          "tags": [
            "users"
          ],
          "summary": "Create a new user.",
          "description": "Create a new user in the database.",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "JSON data for creating a new user",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserData"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User created successfully.",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Invalid request data."
            }
          }
        },
        "get": {
          "tags": [
            "users"
          ],
          "summary": "Get all users.",
          "description": "Retrieve details of all users in the database.",
          "responses": {
            "200": {
              "description": "List of users.",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        }
      },
    "/users/{user_id}": {
        "put": {
          "tags": [
            "users"
          ],
          "summary": "Update an existing user by ID.",
          "description": "Update an existing user in the database by providing a UserID.",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "type": "integer",
              "required": true,
              "description": "UserID of the desired user."
            },
            {
              "name": "body",
              "in": "body",
              "description": "JSON data for updating an existing user",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserData"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User updated successfully.",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "404": {
              "description": "User not found."
            }
          }
        },
        "get": {
          "tags": [
            "users"
          ],
          "summary": "Get user by ID.",
          "description": "Retrieve user details by providing a UserID.",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "type": "integer",
              "required": true,
              "description": "UserID of the desired user."
            }
          ],
          "responses": {
            "200": {
              "description": "User data.",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "404": {
              "description": "User not found."
            }
          }
        },
        "delete": {
          "tags": [
            "users"
          ],
          "summary": "Delete user by ID.",
          "description": "Delete user by providing an UserID.",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "type": "integer",
              "required": true,
              "description": "UserID of the undesired user."
            }
          ],
          "responses": {
            "200": {
              "description": "User data.",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "404": {
              "description": "User not found."
            }
          }
        }
      },
    "/login": {
        "post": {
          "summary": "User login",
          "tags": [
            "auth"
          ],
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Credentials for user login",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "Username": {
                    "type": "string"
                  },
                  "Password": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Session created successfully",
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              }
            },
            "404": {
              "description": "User not found",
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
    "/logout": {
        "delete": {
          "summary": "User logout",
          "tags": [
            "auth"
          ],
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "description": "JWT token",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Session deleted successfully",
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid token or user has no session",
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
  },
    "definitions": {
      "AlbumData": {
        "type": "object",
        "properties": {
          "Title": {
            "type": "string"
          },
          "Publishing_Date": {
            "type": "string"
          },
          "Cover": {
            "type": "string"
          },
          "ArtistID": {
            "type": "integer"
          },
          "GenreID": {
            "type": "integer"
          }
        }
      },
      "Album": {
        "type": "object",
        "properties": {
          "AlbumID": {
            "type": "integer"
          },
          "Title": {
            "type": "string"
          },
          "Publishing_Date": {
            "type": "string"
          },
          "Cover": {
            "type": "string"
          },
          "ArtistID": {
            "type": "integer"
          },
          "GenreID": {
            "type": "integer"
          }
        }
      },
      "GenreData": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          }
        }
      },
      "Genre": {
        "type": "object",
        "properties": {
          "GenreID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "ArtistData": {
        "type": "object",
        "properties": {
          "Full_Name": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "Photo": {
            "type": "string"
          },
          "GenreID": {
            "type": "integer"
          }
        }
      },
      "Artist": {
        "type": "object",
        "properties": {
          "ArtistID": {
            "type": "integer"
          },
          "Full_Name": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "Photo": {
            "type": "string"
          },
          "GenreID": {
            "type": "integer"
          }
        }
      },
      "SongData": {
        "type": "object",
        "properties": {
          "Title": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Artist": {
            "type": "integer"
          },
          "Album": {
            "type": "integer"
          },
          "Song": {
            "type": "string"
          }
        }
      },
      "Song": {
        "type": "object",
        "properties": {
          "SongID": {
            "type": "integer"
          },
          "Title": {
            "type": "string"
          },
          "Upload_Date": {
            "type": "string"
          },
          "Song_base64": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "ArtistID": {
            "type": "integer"
          },
          "AlbumID": {
            "type": "integer"
          }
        }
      },
      "SongsOfArtist": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "SongID": {
                "type": "integer"
              },
              "Title": {
                "type": "string"
              },
              "Upload_Date": {
                "type": "string"
              },
              "Song_base64": {
                "type": "string"
              },
              "Description": {
                "type": "string"
              },
              "ArtistID": {
                "type": "integer"
              },
              "Album": {
                "type": "object",
                "properties": {
                  "AlbumID": {
                    "type": "integer"
                  },
                  "Title": {
                    "type": "string"
                  },
                  "Publishing_Date": {
                    "type": "string"
                  },
                  "Cover": {
                    "type": "string"
                  },
                  "ArtistID": {
                    "type": "integer"
                  },
                  "GenreID": {
                    "type": "integer"
                  }
                }
              }
            }
          }
      },
      "SongsOfGenre": {"type": "array",
          "items": {
            "type": "object",
            "properties": {
              "SongID": {
                "type": "integer"
              },
              "Title": {
                "type": "string"
              },
              "Upload_Date": {
                "type": "string"
              },
              "Song_base64": {
                "type": "string"
              },
              "Description": {
                "type": "string"
              },
              "Artist": {
                "type": "object",
                "properties": {
                  "ArtistID": {
                    "type": "integer"
                  },
                  "Full name": {
                    "type": "string"
                  },
                  "Country": {
                    "type": "string"
                  },
                  "Photo": {
                    "type": "string"
                  },
                  "GenreID": {
                    "type": "integer"
                  }
                }
              },
              "Album": {
                "type": "object",
                "properties": {
                  "AlbumID": {
                    "type": "integer"
                  },
                  "Title": {
                    "type": "string"
                  },
                  "Publishing_Date": {
                    "type": "string"
                  },
                  "Cover": {
                    "type": "string"
                  },
                  "ArtistID": {
                    "type": "integer"
                  },
                  "GenreID": {
                    "type": "integer"
                  }
                }
              }
            }
          }},
      "PlaylistData": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "UserID": {
            "type": "integer"
          }
        }
      },
      "SongPlayListAssociation": {
        "type": "object",
        "properties": {
          "PlaylistID": {
            "type": "integer"
          },
          "SongID": {
            "type": "integer"
          }
        }
      },
      "Playlist": {
        "type": "object",
        "properties": {
          "PlaylistID": {
                      "type": "integer"
                    },
                    "Name":{
                      "type": "string"
                    },
                    "UserID": {
                      "type": "integer"
                    },
                    "Songs": {
                      "type": "array",
                      "properties": {
                        "SongID": {
                          "type": "integer"
                        },
                        "Title": {
                          "type": "string"
                        },
                        "Upload_Date": {
                          "type": "string"
                        },
                        "Description": {
                          "type": "string"
                        },
                        "ArtistID": {
                          "type": "integer"
                        },
                        "AlbumID": {
                          "type": "integer"
                        }
                      }
                    }

        }
      },
      "UserData": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Surname": {
            "type": "string"
          },
          "Username": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Surname": {
            "type": "string"
          },
          "Username": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Registration_Date": {
            "type": "string"
          }
        }
      }
    }
  }
